xlab="Input",
ylab="Output")
grid()
OLS_coef = solve(t(X) %*% X) %*% t(X) %*% y
lines(x, regression_line(x, OLS_coef[1], OLS_coef[2]),
col="green", lwd=2)
w = rep(0.5, dim(X)[2])
eta = 0.5
eps = 1e-1
minimum = c()
while (TRUE)
{
i = sample(1:dim(X)[1], 1)
X.local = X[i, ]
y.local = y[i]
wn <- w + 2 * eta * (y.local - X.local * w) * X.local
w <- wn
RSSw <- -1/dim(X)[2] * t(X) %*% (y - X %*% w)
minimum <- c(minimum, RSSw)
if (abs(norm(RSSw, "2")) < eps)
{
break;
}
print(abs(norm(RSSw, "2")))
}
x = seq(-2, 2, 0.01)
y = runif(length(x), 0, 1) + runif(length(x), 1, 1.5) * x
X = cbind(1, x)
par(mfrow=c(1,2))
plot(x, y, col="blue",
main="SGD", cex=0.7,
xlab="Input",
ylab="Output")
grid()
OLS_coef = solve(t(X) %*% X) %*% t(X) %*% y
lines(x, regression_line(x, OLS_coef[1], OLS_coef[2]),
col="green", lwd=2)
w = rep(0.5, dim(X)[2])
eta = 0.5
eps = 1e-1
minimum = c()
while (TRUE)
{
i = sample(1:dim(X)[1], 1)
X.local = X[i, ]
y.local = y[i]
wn <- w + 2/dim(X)[1] * eta * (y.local - X.local * w) * X.local
w <- wn
RSSw <- -1/dim(X)[2] * t(X) %*% (y - X %*% w)
minimum <- c(minimum, RSSw)
if (abs(norm(RSSw, "2")) < eps)
{
break;
}
print(abs(norm(RSSw, "2")))
}
line <- regression_line(x, w[1], w[2])
lines(x, line, col="red", lwd=2, lty=2)
legend("topleft", "Legenda",
c("Coeficientii OLS", "Curba de regresie SGD"),
fill=c("green", "red"))
plot(minimum, type="l", col="blue",
main="Descresterea spre minim",
xlab="Iteratia",
ylab="Minimul")
grid()
x = seq(-2, 2, 0.01)
y = runif(length(x), 0, 1) + runif(length(x), 1, 1.5) * x
X = cbind(1, x)
par(mfrow=c(1,2))
plot(x, y, col="blue",
main="SGD", cex=0.7,
xlab="Input",
ylab="Output")
grid()
OLS_coef = solve(t(X) %*% X) %*% t(X) %*% y
lines(x, regression_line(x, OLS_coef[1], OLS_coef[2]),
col="green", lwd=2)
w = rep(0.5, dim(X)[2])
eta = 0.5
eps = 1e-1
minimum = c()
while (TRUE)
{
i = sample(1:dim(X)[1], 1)
X.local = X[i, ]
y.local = y[i]
wn <- w + 2/dim(X)[1] * eta * (y.local - X.local * w) * X.local
w <- wn
RSSw <- -1/dim(X)[2] * t(X) %*% (y - X %*% w)
minimum <- c(minimum, RSSw)
if (abs(norm(RSSw, "2")) < eps)
{
break;
}
print(abs(norm(RSSw, "2")))
}
line <- regression_line(x, w[1], w[2])
lines(x, line, col="red", lwd=2, lty=2)
legend("topleft", "Legenda",
c("Coeficientii OLS", "Curba de regresie SGD"),
fill=c("green", "red"))
plot(minimum, type="l", col="blue",
main="Descresterea spre minim",
xlab="Iteratia",
ylab="Minimul")
grid()
x = seq(-2, 2, 0.01)
y = runif(length(x), 0, 1) + runif(length(x), 1, 1.5) * x
X = cbind(1, x)
par(mfrow=c(1,2))
plot(x, y, col="blue",
main="SGD", cex=0.7,
xlab="Input",
ylab="Output")
grid()
OLS_coef = solve(t(X) %*% X) %*% t(X) %*% y
lines(x, regression_line(x, OLS_coef[1], OLS_coef[2]),
col="green", lwd=2)
w = rep(0.5, dim(X)[2])
eta = 0.7
eps = 1e-1
minimum = c()
while (TRUE)
{
i = sample(1:dim(X)[1], 1)
X.local = X[i, ]
y.local = y[i]
wn <- w + 2/dim(X)[1] * eta * (y.local - X.local * w) * X.local
w <- wn
RSSw <- -1/dim(X)[2] * t(X) %*% (y - X %*% w)
minimum <- c(minimum, RSSw)
if (abs(norm(RSSw, "2")) < eps)
{
break;
}
print(abs(norm(RSSw, "2")))
}
line <- regression_line(x, w[1], w[2])
lines(x, line, col="red", lwd=2, lty=2)
legend("topleft", "Legenda",
c("Coeficientii OLS", "Curba de regresie SGD"),
fill=c("green", "red"))
plot(minimum, type="l", col="blue",
main="Descresterea spre minim",
xlab="Iteratia",
ylab="Minimul")
grid()
x = seq(-2, 2, 0.01)
y = runif(length(x), 0, 1) + runif(length(x), 1, 1.5) * x
X = cbind(1, x)
par(mfrow=c(1,2))
plot(x, y, col="blue",
main="SGD", cex=0.7,
xlab="Input",
ylab="Output")
grid()
OLS_coef = solve(t(X) %*% X) %*% t(X) %*% y
lines(x, regression_line(x, OLS_coef[1], OLS_coef[2]),
col="green", lwd=2)
w = rep(0, dim(X)[2])
eta = 0.5
eps = 1e-1
minimum = c()
while (TRUE)
{
i = sample(1:dim(X)[1], 1)
X.local = X[i, ]
y.local = y[i]
wn <- w + 2/dim(X)[1] * eta * (y.local - X.local * w) * X.local
w <- wn
RSSw <- -1/dim(X)[2] * t(X) %*% (y - X %*% w)
minimum <- c(minimum, RSSw)
if (abs(norm(RSSw, "2")) < eps)
{
break;
}
print(abs(norm(RSSw, "2")))
}
line <- regression_line(x, w[1], w[2])
lines(x, line, col="red", lwd=2, lty=2)
legend("topleft", "Legenda",
c("Coeficientii OLS", "Curba de regresie SGD"),
fill=c("green", "red"))
plot(minimum, type="l", col="blue",
main="Descresterea spre minim",
xlab="Iteratia",
ylab="Minimul")
grid()
x = seq(-2, 2, 0.01)
y = runif(length(x), 0, 1) + runif(length(x), 1, 1.5) * x
X = cbind(1, x)
par(mfrow=c(1,2))
plot(x, y, col="blue",
main="SGD", cex=0.7,
xlab="Input",
ylab="Output")
grid()
OLS_coef = solve(t(X) %*% X) %*% t(X) %*% y
lines(x, regression_line(x, OLS_coef[1], OLS_coef[2]),
col="green", lwd=2)
w = rep(0.5, dim(X)[2])
eta = 0.5
eps = 1e-2
minimum = c()
while (TRUE)
{
i = sample(1:dim(X)[1], 1)
X.local = X[i, ]
y.local = y[i]
wn <- w + 2/dim(X)[1] * eta * (y.local - X.local * w) * X.local
w <- wn
RSSw <- -1/dim(X)[2] * t(X) %*% (y - X %*% w)
minimum <- c(minimum, RSSw)
if (abs(norm(RSSw, "2")) < eps)
{
break;
}
print(abs(norm(RSSw, "2")))
}
x = seq(-2, 2, 0.01)
y = runif(length(x), 0, 1) + runif(length(x), 1, 1.5) * x
X = cbind(1, x)
par(mfrow=c(1,2))
plot(x, y, col="blue",
main="SGD", cex=0.7,
xlab="Input",
ylab="Output")
grid()
OLS_coef = solve(t(X) %*% X) %*% t(X) %*% y
lines(x, regression_line(x, OLS_coef[1], OLS_coef[2]),
col="green", lwd=2)
w = rep(0.5, dim(X)[2])
eta = 0.5
eps = 1e-1
minimum = c()
while (TRUE)
{
i = sample(1:dim(X)[1], 1)
X.local = X[i, ]
y.local = y[i]
wn <- w + 2/dim(X)[1] * eta * (y.local - X.local * w) * X.local
w <- wn
RSSw <- -1/dim(X)[2] * t(X) %*% (y - X %*% w)
minimum <- c(minimum, RSSw)
if (abs(norm(RSSw, "2")) < eps)
{
break;
}
print(abs(norm(RSSw, "2")))
}
line <- regression_line(x, w[1], w[2])
lines(x, line, col="red", lwd=2, lty=2)
legend("topleft", "Legenda",
c("Coeficientii OLS", "Curba de regresie SGD"),
fill=c("green", "red"))
plot(minimum, type="l", col="blue",
main="Descresterea spre minim",
xlab="Iteratia",
ylab="Minimul")
grid()
w
x = seq(-2, 2, 0.01)
y = runif(length(x), 0, 1) + runif(length(x), 1, 1.5) * x
X = cbind(1, x)
par(mfrow=c(1,2))
plot(x, y, col="blue",
main="SGD", cex=0.7,
xlab="Input",
ylab="Output")
grid()
OLS_coef = solve(t(X) %*% X) %*% t(X) %*% y
lines(x, regression_line(x, OLS_coef[1], OLS_coef[2]),
col="green", lwd=2)
w = rep(0.5, dim(X)[2])
eta = 0.3
eps = 1e-2
minimum = c()
while (TRUE)
{
i = sample(1:dim(X)[1], 1)
X.local = X[i, ]
y.local = y[i]
wn <- w + 2/dim(X)[1] * eta * (y.local - X.local * w) * X.local
w <- wn
RSSw <- -1/dim(X)[2] * t(X) %*% (y - X %*% w)
minimum <- c(minimum, RSSw)
if (abs(norm(RSSw, "2")) < eps)
{
break;
}
print(abs(norm(RSSw, "2")))
}
line <- regression_line(x, w[1], w[2])
lines(x, line, col="red", lwd=2, lty=2)
legend("topleft", "Legenda",
c("Coeficientii OLS", "Curba de regresie SGD"),
fill=c("green", "red"))
plot(minimum, type="l", col="blue",
main="Descresterea spre minim",
xlab="Iteratia",
ylab="Minimul")
grid()
w
x = seq(-2, 2, 0.01)
y = runif(length(x), 0, 1) + runif(length(x), 1, 1.5) * x
X = cbind(1, x)
par(mfrow=c(1,2))
plot(x, y, col="blue",
main="SGD", cex=0.7,
xlab="Input",
ylab="Output")
grid()
OLS_coef = solve(t(X) %*% X) %*% t(X) %*% y
lines(x, regression_line(x, OLS_coef[1], OLS_coef[2]),
col="green", lwd=2)
w = rep(0, dim(X)[2])
eta = 0.3
eps = 1e-2
minimum = c()
while (TRUE)
{
i = sample(1:dim(X)[1], 1)
X.local = X[i, ]
y.local = y[i]
wn <- w + 2/dim(X)[1] * eta * (y.local - X.local * w) * X.local
w <- wn
RSSw <- -1/dim(X)[2] * t(X) %*% (y - X %*% w)
minimum <- c(minimum, RSSw)
if (abs(norm(RSSw, "2")) < eps)
{
break;
}
print(abs(norm(RSSw, "2")))
}
line <- regression_line(x, w[1], w[2])
lines(x, line, col="red", lwd=2, lty=2)
legend("topleft", "Legenda",
c("Coeficientii OLS", "Curba de regresie SGD"),
fill=c("green", "red"))
plot(minimum, type="l", col="blue",
main="Descresterea spre minim",
xlab="Iteratia",
ylab="Minimul")
grid()
w
solve(t(X) %*% X) %*% t(X) %*% y
x = seq(-2, 2, 0.01)
y = runif(length(x), 0, 1) + runif(length(x), 1, 1.5) * x
X = cbind(1, x)
par(mfrow=c(1,2))
plot(x, y, col="blue",
main="SGD", cex=0.7,
xlab="Input",
ylab="Output")
grid()
OLS_coef = solve(t(X) %*% X) %*% t(X) %*% y
lines(x, regression_line(x, OLS_coef[1], OLS_coef[2]),
col="green", lwd=2)
w = rep(0, dim(X)[2])
eta = 0.3
eps = 1e-1
minimum = c()
while (TRUE)
{
i = sample(1:dim(X)[1], 1)
X.local = X[i, ]
y.local = y[i]
wn <- w + 2/dim(X)[1] * eta * (y.local - X.local * w) * X.local
w <- wn
RSSw <- -1/dim(X)[2] * t(X) %*% (y - X %*% w)
minimum <- c(minimum, RSSw)
if (abs(norm(RSSw, "2")) < eps)
{
break;
}
print(abs(norm(RSSw, "2")))
}
line <- regression_line(x, w[1], w[2])
lines(x, line, col="red", lwd=2, lty=2)
legend("topleft", "Legenda",
c("Coeficientii OLS", "Curba de regresie SGD"),
fill=c("green", "red"))
plot(minimum, type="l", col="blue",
main="Descresterea spre minim",
xlab="Iteratia",
ylab="Minimul")
grid()
w
solve(t(X) %*% X) %*% t(X) %*% y
library(lrfs)
library(lrfs)
library(lrfs)
library(lrfs)
library(lrfs)
library(lrfs)
library(lrfs)
x = seq(-2, 2, 0.01)
y = runif(length(x), 0, 1) + runif(length(x), 1, 1.5) * x
X = cbind(1, x)
w_gd = fit_linear_regression(X, y, verbose = TRUE)
x = seq(-2, 2, 0.01)
y = runif(length(x), 0, 1) + runif(length(x), 1, 1.5) * x
X = cbind(1, x)
w_gd = fit_linear_regression(X, y, verbose = TRUE)
x = seq(-2, 2, 0.01)
y = runif(length(x), 0, 1) + runif(length(x), 1, 1.5) * x
X = cbind(1, x)
w_gd = fit_linear_regression(X, y, verbose = TRUE)
x = seq(-2, 2, 0.01)
y = runif(length(x), 0, 1) + runif(length(x), 1, 1.5) * x
X = cbind(1, x)
w_gd = fit_linear_regression(X, y, verbose = TRUE)
A = matrix(c(1,2,3,4,5,6,7,8,9), nrow=3, ncol=3, byrow=T)
A
A[,2:]
A(,2:)
A[2,]
A[,2]
A[:,2:]
A[, 2:dim(A)[2]]
x = seq(-2, 2, 0.01)
y = runif(length(x), 0, 1) + runif(length(x), 1, 1.5) * x
X = cbind(1, x)
w_gd = fit_linear_regression(X, y, verbose = TRUE)
A
A = cbind(1, A)
A
A[, 2:dim(A)[2]]
X
X[, 2:dim(X)[2]]
x = seq(-2, 2, 0.01)
y = runif(length(x), 0, 1) + runif(length(x), 1, 1.5) * x
X = cbind(1, x)
w_gd = fit_linear_regression(X, y, verbose = TRUE)
x = seq(-2, 2, 0.01)
y = runif(length(x), 0, 1) + runif(length(x), 1, 1.5) * x
X = cbind(1, x)
w_gd = fit_linear_regression(X, y, verbose = TRUE)
x = seq(-2, 2, 0.01)
y = runif(length(x), 0, 1) + runif(length(x), 1, 1.5) * x
X = cbind(1, x)
w_gd = fit_linear_regression(X, y, verbose = TRUE)
x = seq(-2, 2, 0.01)
y = runif(length(x), 0, 1) + runif(length(x), 1, 1.5) * x
X = cbind(1, x)
w_gd = fit_linear_regression(X, y, verbose = TRUE)
x = seq(-2, 2, 0.01)
y = runif(length(x), 0, 1) + runif(length(x), 1, 1.5) * x
X = cbind(1, x)
w_gd = fit_linear_regression(X, y, optimizer = "gd", verbose = TRUE)
x = seq(-2, 2, 0.01)
y = runif(length(x), 0, 1) + runif(length(x), 1, 1.5) * x
X = cbind(1, x)
w_gd = fit_linear_regression(X, y, optimizer = "gd", verbose = TRUE)
gradient_descent
library(lrfs)
x = seq(-2, 2, 0.01)
y = runif(length(x), 0, 1) + runif(length(x), 1, 1.5) * x
X = cbind(1, x)
w_gd = fit_linear_regression(X, y, optimizer = "gd", verbose = TRUE)
library(lrfs)
x = seq(-2, 2, 0.01)
y = runif(length(x), 0, 1) + runif(length(x), 1, 1.5) * x
X = cbind(1, x)
w_gd = fit_linear_regression(X, y, optimizer = "gd", verbose = TRUE)
library(lrfs)
library(lrfs)
library(lrfs)
man(plot)
? plot
library(lrfs)
setwd("C:/Users/bogda/Desktop/lrfs/R")
adam
optimization_methods/adam
optimization_methods
setwd("C:/Users/bogda/Desktop/lrfs/R")
adam
setwd("C:/Users/bogda/Desktop/lrfs/R/optimization_methods")
adam
setwd("C:/Users/bogda/Desktop/lrfs/R")
adam
setwd("/lrfs/R/optimization_methods")
library(lrfs)
devtools::document()
install.packages(devtools)
install.packages("devtools")
devtools::document()
? fit_lasso_regression
? fit_lasso_regression
devtools::document()
? fit_lasso_regression
? fit_lasso_regression
?? fit_lasso_regression
library(lrfs)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::use_vignette("lrfs-vignette")
install.packages("rmarkdown")
install.packages("pandoc")
devtools::use_vignette("lrfs")
devtools::use_vignette
use_vignette()
devtools::use_vignette("my-vignette")
devtools::uses_testthat()
devtools::use_testthat()
